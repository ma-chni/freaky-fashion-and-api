// <auto-generated />
using System;
using FreakyFashion.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FreakyFashion.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200219215758_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FreakyFashion.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Postcode")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Address");
                });

            modelBuilder.Entity("FreakyFashion.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImgUrl = "/img/bag.jpg",
                            Name = "Rea"
                        },
                        new
                        {
                            Id = 2,
                            ImgUrl = "/img/sweater.jpg",
                            Name = "Tröjor"
                        },
                        new
                        {
                            Id = 3,
                            ImgUrl = "/img/shoe.jpg",
                            Name = "Skor"
                        },
                        new
                        {
                            Id = 4,
                            ImgUrl = "/img/jeans.jpg",
                            Name = "Jeans"
                        },
                        new
                        {
                            Id = 5,
                            ImgUrl = "/img/jacket.jpg",
                            Name = "Jackor"
                        },
                        new
                        {
                            Id = 6,
                            ImgUrl = "/img/bag.jpg",
                            Name = "Väskor"
                        },
                        new
                        {
                            Id = 7,
                            ImgUrl = "/img/dress.jpg",
                            Name = "Klänningar"
                        });
                });

            modelBuilder.Entity("FreakyFashion.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("FreakyFashion.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<long>("TotalPrice")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("FreakyFashion.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<string>("UrlSlug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleNumber = "AWE321",
                            Description = "Brun läder väska med rem",
                            ImageUrl = "/img/bag.jpg",
                            Name = "Brun väska",
                            Price = 899L,
                            UrlSlug = "brun-läder-väska"
                        },
                        new
                        {
                            Id = 2,
                            ArticleNumber = "13K34S",
                            Description = "Svart klänning med vita prickar",
                            ImageUrl = "/img/dress.jpg",
                            Name = "Svart klänning",
                            Price = 649L,
                            UrlSlug = "svart-klänning"
                        },
                        new
                        {
                            Id = 3,
                            ArticleNumber = "7UR432",
                            Description = "Gul vindjacka med gore-tex material",
                            ImageUrl = "/img/jacket2.jpg",
                            Name = "Gul vindjacka",
                            Price = 1100L,
                            UrlSlug = "gul-vind-jacka"
                        },
                        new
                        {
                            Id = 4,
                            ArticleNumber = "UI8923",
                            Description = "Ljus-blå jeans med hål",
                            ImageUrl = "/img/jeans4.jpg",
                            Name = "Ljus-blå jeans",
                            Price = 799L,
                            UrlSlug = "ljus-blå-jeans"
                        },
                        new
                        {
                            Id = 5,
                            ArticleNumber = "Q32SDR",
                            Description = "Multi färgad sneaker från Nike",
                            ImageUrl = "/img/shoe4.jpg",
                            Name = "Nike sneakers",
                            Price = 1800L,
                            UrlSlug = "multifärgad-nike-sneakers"
                        },
                        new
                        {
                            Id = 6,
                            ArticleNumber = "Q8H53D",
                            Description = "Gul limiterad väska med svarta bin och bruna detaljer",
                            ImageUrl = "/img/bag1.jpg",
                            Name = "Gul väska",
                            Price = 2499L,
                            UrlSlug = "gul-väska"
                        },
                        new
                        {
                            Id = 7,
                            ArticleNumber = "GD02DB",
                            Description = "Svart klänning med vita prickar",
                            ImageUrl = "/img/dress7.jpg",
                            Name = "Svart klänning",
                            Price = 1499L,
                            UrlSlug = "svart-klänning-med-prickar"
                        },
                        new
                        {
                            Id = 8,
                            ArticleNumber = "TG023A",
                            Description = "Grå jeans med slitningar",
                            ImageUrl = "/img/jeans3.jpg",
                            Name = "Gråa jeans",
                            Price = 699L,
                            UrlSlug = "gråa-jeans"
                        },
                        new
                        {
                            Id = 9,
                            ArticleNumber = "1EF56G",
                            Description = "Svarta militär stövlar",
                            ImageUrl = "/img/shoe.jpg",
                            Name = "Svarta stövlar",
                            Price = 999L,
                            UrlSlug = "svarta-stövlar"
                        },
                        new
                        {
                            Id = 10,
                            ArticleNumber = "WE58XC",
                            Description = "Vit bomullströja med små detaljer ",
                            ImageUrl = "/img/sweater1.jpg",
                            Name = "Vit tröja",
                            Price = 789L,
                            UrlSlug = "vit-tröja"
                        },
                        new
                        {
                            Id = 11,
                            ArticleNumber = "TYG4D5",
                            Description = "Ljus-rosa väska",
                            ImageUrl = "/img/bag2.jpg",
                            Name = "Ljus-rosa väska",
                            Price = 400L,
                            UrlSlug = "ljus-rosa-väska"
                        },
                        new
                        {
                            Id = 12,
                            ArticleNumber = "HU90D3",
                            Description = "Gul off-shoulder klänning",
                            ImageUrl = "/img/dress2.jpg",
                            Name = "Gul klänning",
                            Price = 499L,
                            UrlSlug = "gul-klänning"
                        },
                        new
                        {
                            Id = 13,
                            ArticleNumber = "3DR5GC",
                            Description = "Ljus-brun jacka med snöre",
                            ImageUrl = "/img/jacket3.jpg",
                            Name = "Ljus-brun jacka",
                            Price = 699L,
                            UrlSlug = "ljus-brun-jacka"
                        },
                        new
                        {
                            Id = 14,
                            ArticleNumber = "B76SXW",
                            Description = "Ljus-blå jeans med slitningar, band på sidorna",
                            ImageUrl = "/img/jeans6.jpg",
                            Name = "Ljus-blå jeans",
                            Price = 699L,
                            UrlSlug = "ljus-blåa-jeans-med-band"
                        },
                        new
                        {
                            Id = 15,
                            ArticleNumber = "E35FGB",
                            Description = "Blå stickad tröja",
                            ImageUrl = "/img/sweater2.jpg",
                            Name = "Blå tröja",
                            Price = 500L,
                            UrlSlug = "blå-tröja"
                        },
                        new
                        {
                            Id = 16,
                            ArticleNumber = "WD780C",
                            Description = "Ljus-rosa off-shoulder klänning",
                            ImageUrl = "/img/dress3.jpg",
                            Name = "Ljus-rosa klänning",
                            Price = 899L,
                            UrlSlug = "ljus-rosa-klänning"
                        },
                        new
                        {
                            Id = 17,
                            ArticleNumber = "T5DESW",
                            Description = "Grå träningsjacka från Adidias",
                            ImageUrl = "/img/jacket4.jpg",
                            Name = "Adidas träningsjacka",
                            Price = 1499L,
                            UrlSlug = "adidas-tränings-jacka"
                        },
                        new
                        {
                            Id = 18,
                            ArticleNumber = "7UGSRA",
                            Description = "Vita straight jeans",
                            ImageUrl = "/img/jeans2.jpg",
                            Name = "Vita jeans",
                            Price = 399L,
                            UrlSlug = "vita-jeans"
                        },
                        new
                        {
                            Id = 19,
                            ArticleNumber = "EQ98SX",
                            Description = "Ljus-rosa sneakers med fake diamanter",
                            ImageUrl = "/img/shoe7.jpg",
                            Name = "Ljus-rosa sneakers",
                            Price = 399L,
                            UrlSlug = "ljus-rosa-sneakers"
                        },
                        new
                        {
                            Id = 20,
                            ArticleNumber = "WH68CS",
                            Description = "Grå polotröja med små detaljer ",
                            ImageUrl = "/img/sweater5.jpg",
                            Name = "Grå polotröja",
                            Price = 550L,
                            UrlSlug = "grå-polo-tröja"
                        },
                        new
                        {
                            Id = 21,
                            ArticleNumber = "AW4X50",
                            Description = "Grå tyg väska med varg motiv",
                            ImageUrl = "/img/bag6.jpg",
                            Name = "Grå väska",
                            Price = 1100L,
                            UrlSlug = "grå-väska"
                        },
                        new
                        {
                            Id = 22,
                            ArticleNumber = "TYC543",
                            Description = "Cool Vit klänning",
                            ImageUrl = "/img/dress1.jpg",
                            Name = "Vit klänning",
                            Price = 999L,
                            UrlSlug = "vit-klänning"
                        },
                        new
                        {
                            Id = 23,
                            ArticleNumber = "7UR432",
                            Description = "Röda klackskor med 20 cm klack",
                            ImageUrl = "/img/shoe2.jpg",
                            Name = "Röda klack skor",
                            Price = 800L,
                            UrlSlug = "röda-klack-skor"
                        },
                        new
                        {
                            Id = 24,
                            ArticleNumber = "HB7382",
                            Description = "Rosa stickad polotröja",
                            ImageUrl = "/img/sweater3.jpg",
                            Name = "Rosa polotröja",
                            Price = 799L,
                            UrlSlug = "rosa-polo-tröja"
                        },
                        new
                        {
                            Id = 25,
                            ArticleNumber = "H829KL",
                            Description = "Brun väska",
                            ImageUrl = "/img/bag3.jpg",
                            Name = "Brun väska",
                            Price = 250L,
                            UrlSlug = "brun-väska"
                        },
                        new
                        {
                            Id = 26,
                            ArticleNumber = "YHWE4W",
                            Description = "Blommig klänning",
                            ImageUrl = "/img/dress4.jpg",
                            Name = "Blommig klänning",
                            Price = 800L,
                            UrlSlug = "blommig-klänning"
                        },
                        new
                        {
                            Id = 27,
                            ArticleNumber = "OPS3ES",
                            Description = "Svart skinnjacka med silvriga detaljer",
                            ImageUrl = "/img/jacket.jpg",
                            Name = "Svart skinnjacka",
                            Price = 1500L,
                            UrlSlug = "svart-skinn-jacka"
                        },
                        new
                        {
                            Id = 28,
                            ArticleNumber = "HUS823",
                            Description = "Blå väska",
                            ImageUrl = "/img/bag5.jpg",
                            Name = "Blå väska",
                            Price = 400L,
                            UrlSlug = "blå-väska"
                        },
                        new
                        {
                            Id = 29,
                            ArticleNumber = "IUS62H",
                            Description = "Vita sneaker från Nike",
                            ImageUrl = "/img/shoe3.jpg",
                            Name = "Nike sneakers",
                            Price = 1600L,
                            UrlSlug = "vita-nike-sneakers"
                        },
                        new
                        {
                            Id = 30,
                            ArticleNumber = "O1AMCS",
                            Description = "Röd stickad tröja med V-hals",
                            ImageUrl = "/img/sweater.jpg",
                            Name = "Röd tröja",
                            Price = 800L,
                            UrlSlug = "röd-tröja"
                        },
                        new
                        {
                            Id = 31,
                            ArticleNumber = "91S6D",
                            Description = "Brun jeansjacka",
                            ImageUrl = "/img/jacket6.jpg",
                            Name = "Brun jeansjacka",
                            Price = 900L,
                            UrlSlug = "brun-jeans-jacka"
                        },
                        new
                        {
                            Id = 32,
                            ArticleNumber = "AH390D",
                            Description = "Röda jeans med slitningar pch hål",
                            ImageUrl = "/img/jeans1.jpg",
                            Name = "Röda jeans",
                            Price = 450L,
                            UrlSlug = "röda-jeans"
                        },
                        new
                        {
                            Id = 33,
                            ArticleNumber = "PA28S1",
                            Description = "Beige klackskor med rosett",
                            ImageUrl = "/img/shoe5.jpg",
                            Name = "Beige klackskor",
                            Price = 700L,
                            UrlSlug = "beige-klack-skor"
                        },
                        new
                        {
                            Id = 34,
                            ArticleNumber = "OSDG72",
                            Description = "Röd bomullströja med små detaljer ",
                            ImageUrl = "/img/sweater4.jpg",
                            Name = "Röd stickad tröja",
                            Price = 499L,
                            UrlSlug = "röd-stickad-tröja"
                        },
                        new
                        {
                            Id = 35,
                            ArticleNumber = "BNS534",
                            Description = "Brun hand väska",
                            ImageUrl = "/img/bag4.jpg",
                            Name = "Brun väska",
                            Price = 300L,
                            UrlSlug = "brun-hand-väska"
                        },
                        new
                        {
                            Id = 36,
                            ArticleNumber = "1A9SDE",
                            Description = "Blå klänning",
                            ImageUrl = "/img/dress5.jpg",
                            Name = "Blå klänning",
                            Price = 1200L,
                            UrlSlug = "blå-klänning"
                        },
                        new
                        {
                            Id = 37,
                            ArticleNumber = "MD7392",
                            Description = "Ljus-blå jeans jacka",
                            ImageUrl = "/img/jacket1.jpg",
                            Name = "Ljus-blå jeansjacka",
                            Price = 700L,
                            UrlSlug = "ljus-blå-jeans-jacka"
                        },
                        new
                        {
                            Id = 38,
                            ArticleNumber = "AO02D4",
                            Description = "Svarta jeans med hål och fiskenät",
                            ImageUrl = "/img/jeans5.jpg",
                            Name = "Svarta jeans",
                            Price = 500L,
                            UrlSlug = "svarta-jeans"
                        },
                        new
                        {
                            Id = 39,
                            ArticleNumber = "A83BDH",
                            Description = "Ljus-rosa stickad tröja",
                            ImageUrl = "/img/sweater6.jpg",
                            Name = "Ljus-rosa tröja",
                            Price = 399L,
                            UrlSlug = "ljus-rosa-tröja"
                        },
                        new
                        {
                            Id = 40,
                            ArticleNumber = "O1AN5T",
                            Description = "Vit klänning med genomskinliga armar",
                            ImageUrl = "/img/dress6.jpg",
                            Name = "Vit klänning",
                            Price = 899L,
                            UrlSlug = "vit-klänning"
                        },
                        new
                        {
                            Id = 41,
                            ArticleNumber = "R5T2C3",
                            Description = "Beige kappa med svarta knappar",
                            ImageUrl = "/img/jacket5.jpg",
                            Name = "Beige kappa",
                            Price = 1500L,
                            UrlSlug = "beige-kappa"
                        },
                        new
                        {
                            Id = 42,
                            ArticleNumber = "O27DBF",
                            Description = "Ljus-blå jeans med hål",
                            ImageUrl = "/img/jeans7.jpg",
                            Name = "Ljus-blå jeans",
                            Price = 599L,
                            UrlSlug = "ljus-blå-jeans"
                        },
                        new
                        {
                            Id = 43,
                            ArticleNumber = "FR1NC6",
                            Description = "Vita sneakers med svarta detaljer",
                            ImageUrl = "/img/shoe1.jpg",
                            Name = "Vita sneakers",
                            Price = 399L,
                            UrlSlug = "vita-sneakers"
                        },
                        new
                        {
                            Id = 44,
                            ArticleNumber = "OADB73",
                            Description = "Röd polotröja med små detaljer ",
                            ImageUrl = "/img/sweater7.jpg",
                            Name = "Röd polotröja",
                            Price = 550L,
                            UrlSlug = "röd-polo-tröja"
                        },
                        new
                        {
                            Id = 45,
                            ArticleNumber = "CG6234",
                            Description = "Ljus-blå jeans med hål",
                            ImageUrl = "/img/jeans.jpg",
                            Name = "Ljus-blå jeans",
                            Price = 499L,
                            UrlSlug = "ljus-blå-jeans-med-hål"
                        },
                        new
                        {
                            Id = 46,
                            ArticleNumber = "QAMO93",
                            Description = "Olive packpack med små detaljer",
                            ImageUrl = "/img/bag7.jpg",
                            Name = "Olive väska",
                            Price = 599L,
                            UrlSlug = "olive-väska"
                        },
                        new
                        {
                            Id = 47,
                            ArticleNumber = "GANCG4",
                            Description = "Gula converse",
                            ImageUrl = "/img/shoe6.jpg",
                            Name = "Gula converse",
                            Price = 850L,
                            UrlSlug = "gula-converse"
                        },
                        new
                        {
                            Id = 48,
                            ArticleNumber = "AB634D",
                            Description = "Rutig mångfärgad jacka",
                            ImageUrl = "/img/jacket7.jpg",
                            Name = "Rutig jacka",
                            Price = 1100L,
                            UrlSlug = "rutig-jacka"
                        });
                });

            modelBuilder.Entity("FreakyFashion.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategory");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 16,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 17,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 18,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 19,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 20,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 22,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 23,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 24,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 25,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 26,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 27,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 28,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 29,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 30,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 31,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 32,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 33,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 34,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 35,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 36,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 37,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 38,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 39,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 40,
                            CategoryId = 7
                        },
                        new
                        {
                            ProductId = 41,
                            CategoryId = 5
                        },
                        new
                        {
                            ProductId = 42,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 43,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 44,
                            CategoryId = 2
                        },
                        new
                        {
                            ProductId = 45,
                            CategoryId = 4
                        },
                        new
                        {
                            ProductId = 46,
                            CategoryId = 6
                        },
                        new
                        {
                            ProductId = 47,
                            CategoryId = 3
                        },
                        new
                        {
                            ProductId = 48,
                            CategoryId = 5
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("FreakyFashion.Entities.Address", b =>
                {
                    b.HasOne("FreakyFashion.Entities.Customer", "Customer")
                        .WithOne("Address")
                        .HasForeignKey("FreakyFashion.Entities.Address", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FreakyFashion.Entities.Order", b =>
                {
                    b.HasOne("FreakyFashion.Entities.Customer", "Customer")
                        .WithMany("Order")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FreakyFashion.Entities.Product", "Product")
                        .WithMany("Order")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FreakyFashion.Entities.ProductCategory", b =>
                {
                    b.HasOne("FreakyFashion.Entities.Category", "Category")
                        .WithMany("ProductCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FreakyFashion.Entities.Product", "Product")
                        .WithMany("ProductCategory")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
